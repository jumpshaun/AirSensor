C51 COMPILER V9.57.0.0   GUI                                                               07/04/2021 23:51:36 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE GUI
OBJECT MODULE PLACED IN .\Objects\gui.obj
COMPILER INVOKED BY: C:\Program Files\Keil C51\C51\BIN\C51.EXE gui.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\gui.lst) TABS(2) OBJECT(.\Objects\gui.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //测试硬件：单片机STC89C52RC,晶振12M  单片机工作电压3.3V或5V
   4          //QDtech-OLED液晶驱动 for C51
   5          //xiao冯@ShenZhen QDtech co.,LTD
   6          //公司网站:www.qdtft.com
   7          //淘宝网站：http://qdtech.taobao.com
   8          //wiki技术网站：http://www.lcdwiki.com
   9          //我司提供技术支持，任何技术问题欢迎随时交流学习
  10          //固话(传真) :+86 0755-23594567 
  11          //手机:15989313508（冯工） 
  12          //邮箱:lcdwiki01@gmail.com    support@lcdwiki.com    goodtft@163.com
  13          //技术支持QQ:3002773612  3002778157
  14          //技术交流QQ群:324828016
  15          //创建日期:2018/9/14
  16          //版本：V1.0
  17          //版权所有，盗版必究。
  18          //Copyright(C) 深圳市全动电子技术有限公司 2018-2028
  19          //All rights reserved
  20          /****************************************************************************************************
  21          //=========================================电源接线================================================//
  22          // OLED模块                C51单片机
  23          //   VCC         接       DC 5V/3.3V      //OLED屏电源正
  24          //   GND         接          GND          //OLED屏电源地
  25          //=======================================液晶屏数据线接线==========================================//
  26          //本模块默认数据总线类型为IIC
  27          // OLED模块                C51单片机
  28          //   SDA        接           P15          //OLED屏SPI写信号
  29          //=======================================液晶屏控制线接线==========================================//
  30          // OLED模块                C51单片机
  31          //   SCL        接           P17          //OLED屏SPI时钟信号
  32          //=========================================触摸屏接线=========================================//
  33          //本模块不带触摸功能，所以不需要触摸屏接线
  34          ****************************************************************************************************/ 
  35          /***************************************************************************************************
  36            * @attention
  37            *
  38            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  39            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  40            * TIME. AS A RESULT, QD electronic SHALL NOT BE HELD LIABLE FOR ANY
  41            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  42            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  43            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  44          ****************************************************************************************************/
  45          #include "oled.h"
  46          #include "string.h"
  47          #include "oledfont.h" 
  48          #include "gui.h"
  49          
  50          /*******************************************************************
  51           * @name       :void GUI_Fill(u8 sx,u8 sy,u8 ex,u8 ey,u8 color)
  52           * @date       :2018-08-27 
  53           * @function   :fill the specified area
  54           * @parameters :sx:the bebinning x coordinate of the specified area
C51 COMPILER V9.57.0.0   GUI                                                               07/04/2021 23:51:36 PAGE 2   

  55                          sy:the bebinning y coordinate of the specified area，
  56                             it must be set 0~3
  57                          ex:the ending x coordinate of the specified area
  58                          ey:the ending y coordinate of the specified area,
  59                             it must be set 0~3
  60                          color:the color value of the the specified area
  61                                1-white
  62                                0-black
  63           * @retvalue   :None
  64          ********************************************************************/
  65          /*void GUI_Fill(u8 sx,u8 sy,u8 ex,u8 ey,u8 color)
  66          {   
  67            u8 i,j,dat;     
  68            u8 width=ex-sx+1;     //得到填充的宽度
  69            u8 height=ey-sy+1;    //高度
  70            if(color)
  71            {
  72              dat = 0xff;
  73            }
  74            else
  75            {
  76              dat = 0;
  77            }
  78            for(i=0;i<height;i++)
  79            {
  80              OLED_Set_Pos(sx, sy+i); 
  81              for(j=0;j<width;j++)
  82              {
  83                  OLED_WR_Byte(dat,OLED_DATA);
  84              }   
  85            }
  86          }*/
  87          
  88          /*****************************************************************************
  89           * @name       :void GUI_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size,u8 mode)
  90           * @date       :2018-08-27 
  91           * @function   :Display a single English character
  92           * @parameters :x:the bebinning x coordinate of the Character display position
  93                          y:the bebinning y coordinate of the Character display position,
  94                            it must be set 0~3
  95                          chr:the ASCII code of display character(0~94)
  96                          Char_Size:the size of display character(8,16)
  97                          mode:0-white background and black character
  98                               1-black background and white character
  99           * @retvalue   :None
 100          ******************************************************************************/ 
 101          void GUI_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size,u8 mode)
 102          {       
 103   1          unsigned char c=0,i=0,j=0;  
 104   1          c=chr-' ';//得到偏移后的值      
 105   1          if(x>WIDTH-1)
 106   1          {
 107   2            x=0;
 108   2            y=y+2;
 109   2          }
 110   1          if(Char_Size ==16)
 111   1          {
 112   2            for(j=0;j<2;j++)
 113   2            {
 114   3              OLED_Set_Pos(x,y+j);
 115   3              for(i=0;i<8;i++)
 116   3              {
C51 COMPILER V9.57.0.0   GUI                                                               07/04/2021 23:51:36 PAGE 3   

 117   4                if(mode)
 118   4                {
 119   5                  OLED_WR_Byte(F8X16[c*16+i+j*8],OLED_DATA);
 120   5                }
 121   4                else
 122   4                {
 123   5                  OLED_WR_Byte(~(F8X16[c*16+i+j*8]),OLED_DATA);
 124   5                }
 125   4              }
 126   3            }
 127   2           }
 128   1           else 
 129   1           {  
 130   2              OLED_Set_Pos(x,y);
 131   2              for(i=0;i<6;i++)
 132   2              {
 133   3                if(mode)
 134   3                {
 135   4                  OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 136   4                }
 137   3                else
 138   3                {
 139   4                  OLED_WR_Byte(~(F6x8[c][i]),OLED_DATA);
 140   4                }
 141   3              }
 142   2          }
 143   1      }
 144          
 145          /*****************************************************************************
 146           * @name       :void GUI_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size,u8 mode)
 147           * @date       :2018-08-27 
 148           * @function   :Display English string
 149           * @parameters :x:the bebinning x coordinate of the English string
 150                          y:the bebinning y coordinate of the English string
 151                            it must be set 0~3
 152                          chr:the start address of the English string
 153                          Char_Size:the size of display character(height)
 154                          mode:0-white background and black character
 155                               1-black background and white character
 156           * @retvalue   :None
 157          ******************************************************************************/       
 158          void GUI_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size,u8 mode)
 159          {
 160   1        unsigned char j=0,csize;
 161   1        if(Char_Size == 16)
 162   1        {
 163   2          csize = Char_Size/2;
 164   2        }
 165   1        else if(Char_Size == 8)
 166   1        {
 167   2          csize = Char_Size/2+2;
 168   2        }
 169   1        else
 170   1        {
 171   2          return;
 172   2        }
 173   1        while (chr[j]!='\0')
 174   1        {   
 175   2          GUI_ShowChar(x,y,chr[j],Char_Size,mode);
 176   2          x+=csize;
 177   2          if(x>120)
 178   2          {
C51 COMPILER V9.57.0.0   GUI                                                               07/04/2021 23:51:36 PAGE 4   

 179   3            x=0;
 180   3            y+=Char_Size/8;
 181   3          }
 182   2          j++;
 183   2        }
 184   1      }
 185          
 186          /*****************************************************************************
 187           * @name       :u32 mypow(u8 m,u8 n)
 188           * @date       :2018-08-27 
 189           * @function   :get the nth power of m (internal call)
 190           * @parameters :m:the multiplier
 191                          n:the power
 192           * @retvalue   :the nth power of m
 193          ******************************************************************************/ 
 194          static u32 mypow(u8 m,u8 n)
 195          {
 196   1        u32 result=1;  
 197   1        while(n--)result*=m;    
 198   1        return result;
 199   1      }
 200          
 201          /*****************************************************************************
 202           * @name       :void GUI_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 Size,u8 mode)
 203           * @date       :2018-08-27 
 204           * @function   :Display number
 205           * @parameters :x:the bebinning x coordinate of the number
 206                          y:the bebinning y coordinate of the number
 207                            it must be set 0~3
 208                          num:the number(0~4294967295)
 209                          len:the length of the display number
 210                          Size:the size of display number
 211                          mode:0-white background and black character
 212                               1-black background and white character
 213           * @retvalue   :None
 214          ******************************************************************************/        
 215          void GUI_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 Size,u8 mode)
 216          {           
 217   1        u8 t,temp;
 218   1        u8 enshow=0,csize;
 219   1        if(Size == 16)
 220   1        {
 221   2          csize = Size/2;
 222   2        }
 223   1        else if(Size == 8)
 224   1        {
 225   2          csize = Size/2+2;
 226   2        }   
 227   1        else
 228   1        {
 229   2          return;
 230   2        }
 231   1        for(t=0;t<len;t++)
 232   1        {
 233   2          temp=(num/mypow(10,len-t-1))%10;
 234   2          if(enshow==0&&t<(len-1))
 235   2          {
 236   3            if(temp==0)
 237   3            {
 238   4              GUI_ShowChar(x+csize*t,y,' ',Size,mode);
 239   4              continue;
 240   4            }
C51 COMPILER V9.57.0.0   GUI                                                               07/04/2021 23:51:36 PAGE 5   

 241   3            else 
 242   3            {
 243   4              enshow=1; 
 244   4            }
 245   3          }
 246   2          GUI_ShowChar(x+csize*t,y,temp+'0',Size,mode); 
 247   2        }
 248   1      } 
 249          
 250          /*****************************************************************************
 251           * @name       :void GUI_DrawBMP(u8 x,u8 y,u8 width, u8 height, u8 BMP[], u8 mode)
 252           * @date       :2018-08-27 
 253           * @function   :Display a BMP monochromatic picture
 254           * @parameters :x:the bebinning x coordinate of the BMP monochromatic picture
 255                          y:the bebinning y coordinate of the BMP monochromatic picture
 256                            it must be set 0~3
 257                          width:the width of BMP monochromatic picture
 258                          height:the height of BMP monochromatic picture
 259                          BMP:the start address of BMP monochromatic picture array
 260                          mode:0-white background and black character
 261                               1-black background and white character               
 262           * @retvalue   :None
 263          ******************************************************************************/ 
 264          void GUI_DrawBMP(u8 x,u8 y,u8 width, u8 height, u8 BMP[], u8 mode)
 265          {   
 266   1       u8 i,j;
 267   1       u8 tmp;
 268   1       for(i=0;i<(height+7)/8;i++)
 269   1       {
 270   2          OLED_Set_Pos(x,y+i);
 271   2          for(j=0;j<width;j++)
 272   2          {
 273   3              if(mode)
 274   3              {
 275   4                tmp = BMP[i*width+j];
 276   4              }
 277   3              else
 278   3              {
 279   4                tmp = ~(BMP[i*width+j]);
 280   4              }
 281   3              OLED_WR_Byte(tmp,OLED_DATA);
 282   3          }
 283   2       } 
 284   1      }
 285          
 286          //中文显示相关函数
 287          /*****************************************************************************
 288           * @name       :void GUI_ShowFont16(u8 x,u8 y,u8 *s,u8 mode)
 289           * @date       :2018-08-27 
 290           * @function   :Display a single 16x16 Chinese character
 291           * @parameters :x:the bebinning x coordinate of the Chinese character
 292                          y:the bebinning y coordinate of the Chinese character
 293                            it must be set 0~3
 294                          s:the start address of the Chinese character
 295                          mode:0-white background and black character
 296                               1-black background and white character
 297           * @retvalue   :None
 298          ******************************************************************************/ 
 299          /*void GUI_ShowFont16(u8 x,u8 y,u8 *s,u8 mode)
 300          {
 301            u8 i,j,k,tmp;
 302            u16 num;
C51 COMPILER V9.57.0.0   GUI                                                               07/04/2021 23:51:36 PAGE 6   

 303            num = sizeof(cfont16)/sizeof(typFNT_GB16);
 304            for(i=0;i<num;i++)
 305            {
 306              if((cfont16[i].Index[0]==*s)&&(cfont16[i].Index[1]==*(s+1)))
 307              {
 308                for(k=0;k<2;k++)
 309                {
 310                  OLED_Set_Pos(x,y+k);
 311                  for(j=0;j<16;j++)
 312                  {
 313                    if(mode)
 314                    {
 315                      tmp = cfont16[i].Msk[j+k*16];
 316                    }
 317                    else
 318                    {
 319                      tmp = ~(cfont16[i].Msk[j+k*16]);
 320                    }
 321                    OLED_WR_Byte(tmp,OLED_DATA);
 322                  }
 323                } 
 324                break;
 325              } 
 326            }
 327          }*/
 328          
 329          /*****************************************************************************
 330           * @name       :void GUI_ShowFont24(u8 x,u8 y,u8 *s,u8 mode)
 331           * @date       :2018-08-27 
 332           * @function   :Display a single 24x24 Chinese character
 333           * @parameters :x:the bebinning x coordinate of the Chinese character
 334                          y:the bebinning y coordinate of the Chinese character
 335                            it must be set 0~3
 336                          s:the start address of the Chinese character
 337                          mode:0-white background and black character
 338                               1-black background and white character
 339           * @retvalue   :None
 340          ******************************************************************************/ 
 341          /*void GUI_ShowFont24(u8 x,u8 y,u8 *s,u8 mode)
 342          {
 343            u8 i,j,k,tmp;
 344            u16 num;
 345            num = sizeof(cfont24)/sizeof(typFNT_GB24);
 346            for(i=0;i<num;i++)
 347            {
 348              if((cfont24[i].Index[0]==*s)&&(cfont24[i].Index[1]==*(s+1)))
 349              {
 350                for(k=0;k<3;k++)
 351                {
 352                  OLED_Set_Pos(x,y+k);
 353                  for(j=0;j<24;j++)
 354                  {
 355                    if(mode)
 356                    {
 357                      tmp = cfont24[i].Msk[j+k*24];
 358                    }
 359                    else
 360                    {
 361                      tmp = ~(cfont24[i].Msk[j+k*24]);
 362                    }
 363                    OLED_WR_Byte(tmp,OLED_DATA);
 364                  }
C51 COMPILER V9.57.0.0   GUI                                                               07/04/2021 23:51:36 PAGE 7   

 365                } 
 366                break;
 367              } 
 368            }
 369          }*/
 370          
 371          /*****************************************************************************
 372           * @name       :void GUI_ShowFont32(u8 x,u8 y,u8 *s,u8 mode)
 373           * @date       :2018-08-27 
 374           * @function   :Display a single 32x32 Chinese character
 375           * @parameters :x:the bebinning x coordinate of the Chinese character
 376                          y:the bebinning y coordinate of the Chinese character
 377                            it must be set 0~3
 378                          s:the start address of the Chinese character
 379                          mode:0-white background and black character
 380                               1-black background and white character
 381           * @retvalue   :None
 382          ******************************************************************************/ 
 383          /*void GUI_ShowFont32(u8 x,u8 y,u8 *s,u8 mode)
 384          {
 385            u8 i,j,k,tmp;
 386            u16 num;
 387            num = sizeof(cfont32)/sizeof(typFNT_GB32);
 388            for(i=0;i<num;i++)
 389            {
 390              if((cfont32[i].Index[0]==*s)&&(cfont32[i].Index[1]==*(s+1)))
 391              {
 392                for(k=0;k<4;k++)
 393                {
 394                  OLED_Set_Pos(x,y+k);
 395                  for(j=0;j<32;j++)
 396                  {
 397                    if(mode)
 398                    {
 399                      tmp = cfont32[i].Msk[j+k*32];
 400                    }
 401                    else
 402                    {
 403                      tmp = ~(cfont32[i].Msk[j+k*32]);
 404                    }
 405                    OLED_WR_Byte(tmp,OLED_DATA);
 406                  }
 407                } 
 408                break;
 409              } 
 410            }
 411          }*/
 412          
 413          /*****************************************************************************
 414           * @name       :void GUI_ShowCHinese(u8 x,u8 y,u8 hsize,u8 *str,u8 mode)
 415           * @date       :2018-08-27 
 416           * @function   :Display Chinese strings
 417           * @parameters :x:the bebinning x coordinate of the Chinese strings
 418                          y:the bebinning y coordinate of the Chinese strings
 419                            it must be set 0~3
 420                          size:the size of Chinese strings
 421                          str:the start address of the Chinese strings
 422                          mode:0-white background and black character
 423                               1-black background and white character
 424           * @retvalue   :None
 425          ******************************************************************************/          
 426          /*void GUI_ShowCHinese(u8 x,u8 y,u8 hsize,u8 *str,u8 mode)
C51 COMPILER V9.57.0.0   GUI                                                               07/04/2021 23:51:36 PAGE 8   

 427          { 
 428            while(*str!='\0')
 429            {
 430              if(hsize == 16)
 431              {
 432                GUI_ShowFont16(x,y,str,mode);
 433              }
 434              else if(hsize == 24)
 435              {
 436                GUI_ShowFont24(x,y,str,mode);
 437              }
 438              else if(hsize == 32)
 439              {
 440                GUI_ShowFont32(x,y,str,mode);
 441              }
 442              else
 443              {
 444                return;
 445              }
 446              x+=hsize;
 447              if(x>WIDTH-hsize)
 448              {
 449                x=0;
 450                y+=hsize/8;
 451              }
 452              str+=2;
 453            }     
 454          }
 455          */
 456          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1020    ----
   CONSTANT SIZE    =   1026    ----
   XDATA SIZE       =   ----      47
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
