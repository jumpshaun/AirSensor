C51 COMPILER V9.57.0.0   SHT3X                                                             07/03/2021 16:07:01 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE SHT3X
OBJECT MODULE PLACED IN .\Objects\SHT3X.obj
COMPILER INVOKED BY: C:\Program Files\Keil C51\C51\BIN\C51.EXE SHT3X.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\SHT3X.lst) TABS(2) OBJECT(.\Objects\SHT3X.obj)

line level    source

   1          #include "SHT3X.h"
   2          
   3          #define POLYNOMIAL  0x31 // P(x) = x^8 + x^5 + x^4 + 1 = 00110001
   4          
   5          //==============================================================================
   6          unsigned char SHT3X_CalcCrc(unsigned char *crcdata, unsigned char nbrOfBytes)
   7          {
   8   1      //==============================================================================
   9   1        unsigned char Bit;        // bit mask
  10   1        unsigned char crc = 0xFF; // calculated checksum
  11   1        unsigned char byteCtr;    // byte counter
  12   1        
  13   1        // calculates 8-Bit checksum with given polynomial 
  14   1        for(byteCtr = 0; byteCtr < nbrOfBytes; byteCtr++)
  15   1        {
  16   2          crc ^= (crcdata[byteCtr]);
  17   2          for(Bit = 8; Bit > 0; --Bit)
  18   2          {
  19   3            if(crc & 0x80) crc = (crc << 1) ^ POLYNOMIAL;
  20   3            else           crc = (crc << 1);
  21   3          }
  22   2        }
  23   1        return crc;
  24   1      }
  25          etError SHT3X_WriteCommand(etCommands cmd)
  26          {
  27   1        etError error; // error code  
  28   1        error  = I2C_Write_Byte(cmd >> 8);// write the upper 8 bits of the command to the sensor  
  29   1        error |= I2C_Write_Byte(cmd & 0xFF);// write the lower 8 bits of the command to the sensor  
  30   1        return error;
  31   1      }
  32          /*================================================================
  33          【名 称】void SHT3XInit(void)
  34          【功 能】SHT3X初始化函数，主函数中调用
  35          【备 注】
  36          【作 者】
  37          【时 间】
  38          ================================================================*/
  39          void SHT3XInit(void)
  40          {
  41   1        I2CInit();//I2C初始化 
  42   1        I2CStart();
  43   1        I2C_Write_Byte(SHT3XWriteHeader);
  44   1        SHT3X_WriteCommand(CMD_MEAS_PERI_1_H); //1秒高精度循环测量模式
  45   1        I2CStop();
  46   1      }
  47          //==============================================================================循环读取模式
  48          etError SHT3X_XHGetTempAndHumi(int        *temp,int        *humi)
  49          {
  50   1      //==============================================================================
  51   1        etError error;           // error code
  52   1        unsigned long int    rawValueTemp;    // temperature raw value from sensor
  53   1        unsigned long int    rawValueHumi;    // humidity raw value from sensor
  54   1        unsigned char Rdata[6]={0};
C51 COMPILER V9.57.0.0   SHT3X                                                             07/03/2021 16:07:01 PAGE 2   

  55   1        unsigned char i;                                       
  56   1        I2CStart();
  57   1        error  = I2C_Write_Byte(SHT3XWriteHeader);
  58   1        // if no error ...
  59   1        if(error == NO_ERROR)
  60   1        {
  61   2          // start measurement in polling mode
  62   2          // use depending on the required repeatability, the corresponding command
  63   2           error = SHT3X_WriteCommand(CMD_FETCH_DATA);
  64   2        }
  65   1        // if no error, wait until measurement ready
  66   1        if(error == NO_ERROR)
  67   1        {
  68   2          I2CStart();
  69   2           error = I2C_Write_Byte(SHT3XReadHeader);
  70   2            // if measurement has finished -> exit loop
  71   2        }
  72   1        // if no error, read temperature and humidity raw values
  73   1        if(error == NO_ERROR)
  74   1        {
  75   2          for(i=0;i<5;i++)
  76   2          {
  77   3            Rdata[i] = I2C_Read_Byte(ACK);
  78   3          }
  79   2          Rdata[i] = I2C_Read_Byte(NACK);
  80   2          I2CStop();
  81   2          if(Rdata[2]!=SHT3X_CalcCrc(Rdata,2))     error = CHECKSUM_ERROR;
  82   2          if(Rdata[5]!=SHT3X_CalcCrc(&Rdata[3],2)) error = CHECKSUM_ERROR;  
  83   2        }
  84   1        // if no error, calculate temperature in  and humidity in %RH
  85   1        if(error == NO_ERROR)
  86   1        {
  87   2          rawValueTemp =(Rdata[0] << 8) | Rdata[1];
  88   2          rawValueHumi =(Rdata[3] << 8) | Rdata[4];
  89   2          *temp =(int)(1750 *rawValueTemp / 65535 - 450);        //  --温度真实值 * 10
  90   2          *humi =(int)(1000 *rawValueHumi / 65535);              //  --湿度真实值 * 10
  91   2        }
  92   1        return error;
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    489    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----      29
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
